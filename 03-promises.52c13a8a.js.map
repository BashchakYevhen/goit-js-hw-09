{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACJN,EAELI,EAAU,CAAEN,SAAUA,EAAUC,MAAOA,IAGxCM,EAAS,CAAEP,SAAUA,EAAUC,MAAOA,MAErCA,MAdSQ,SAASC,cAAc,SAC/BC,iBAAiB,UAiBxB,SAAsBC,GACtBA,EAAMC,iBACN,MAAQC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IAC3BL,EAAMM,cAEJC,EAAgBC,OAAOL,EAAMM,OAE7BC,EAAeF,OAAOJ,EAAKK,OAEnC,IAAK,IAAIE,EAAQ,EAAGA,EAAQN,EAAOI,MAAOE,IACxCxB,EAAcwB,EAAOJ,GACpBK,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,UAEtD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,UAErDkB,GAAiBG,EAEhBV,EAAMiB,OAAOC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener(\"submit\", onFormSubmit )\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(()=> {\n       if (shouldResolve) {\n      // Fulfill\n      resolve ( { position: position, delay: delay });\n    } else {\n      // Reject\n     reject ( { position: position, delay: delay });\n    }\n    },delay)\n  });\n \n};\nfunction onFormSubmit(event) {\nevent.preventDefault();\nconst { elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const delayOfNumber = Number(delay.value);\n\n  const stepOfNumber = Number(step.value);\n\nfor (let index = 1; index < amount.value; index++) {\n  createPromise(index, delayOfNumber)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delayOfNumber += stepOfNumber;\n  };\n   event.target.reset()\n};"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayOfNumber","Number","value","stepOfNumber","index","then","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.52c13a8a.js.map"}