{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACJN,EAELI,EAAU,CAAEN,SAAUA,EAAUC,MAAOA,IAGxCM,EAAS,CAAEP,SAAUA,EAAUC,MAAOA,MAErCA,MAdSQ,SAASC,cAAc,SAC/BC,iBAAiB,UAiBxB,SAAsBC,GACtBA,EAAMC,iBACN,MAAQC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IAC3BL,EAAMM,OACZ,GAAGH,EAAMI,MAAQ,GAAKH,EAAKG,MAAQ,GAAKF,EAAOE,MAAQ,EACtD,OAAOtB,EAAAuB,OAAOC,QAAQ,gCAErB,IAAIC,EAAgBC,OAAOR,EAAMI,OAEjC,MAAMK,EAAeD,OAAOP,EAAKG,OAEnC,IAAK,IAAIM,EAAQ,EAAGA,GAASR,EAAOE,MAAOM,IACzC1B,EAAc0B,EAAOH,GACpBI,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAuB,OAAOO,QAAQ,uBAAqB3B,QAAiBC,UAEtD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAuB,OAAOC,QAAQ,sBAAoBrB,QAAeC,UAErDqB,GAAgCE,EAE/BZ,EAAMM,OAAOW","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener(\"submit\", onFormSubmit )\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(()=> {\n       if (shouldResolve) {\n      // Fulfill\n      resolve ( { position: position, delay: delay });\n    } else {\n      // Reject\n     reject ( { position: position, delay: delay });\n    }\n    },delay)\n  });\n \n};\nfunction onFormSubmit(event) {\nevent.preventDefault();\nconst { elements: { delay, step, amount },\n  } = event.target;\nif(delay.value < 0 || step.value < 0 || amount.value < 0){\n return Notify.failure(`the value cannot be negative`)\n  };\n  let delayOfNumber = Number(delay.value);\n\n  const stepOfNumber = Number(step.value);\n\nfor (let index = 1; index <= amount.value; index++) {\n  createPromise(index, delayOfNumber)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delayOfNumber = delayOfNumber + stepOfNumber;\n  };\n   event.target.reset()\n};\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","target","value","Notify","failure","delayOfNumber","Number","stepOfNumber","index","then","success","catch","reset"],"version":3,"file":"03-promises.634485dd.js.map"}