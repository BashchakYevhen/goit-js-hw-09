{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACJN,EAELI,EAAU,CAAEN,SAAUA,EAAUC,MAAOA,IAGxCM,EAAS,CAAEP,SAAUA,EAAUC,MAAOA,MAErCA,MAdSQ,SAASC,cAAc,SAC/BC,iBAAiB,UAiBxB,SAAsBC,GACtBA,EAAMC,iBAQN,IAPA,IACkBC,EAAZF,EAAMG,OADJC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3BC,EAAgBC,OAAOJ,EAAMK,OAE3BC,EAAeF,OAAOH,EAAKI,OAE1BE,EAAQ,EAAGA,GAASL,EAAOG,MAAOE,IACzCzB,EAAcyB,EAAOJ,GACpBK,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBJ,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,UAE9D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBJ,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,UAE7DmB,GAAgCG,EAE/BX,EAAMG,OAAOiB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener(\"submit\", onFormSubmit )\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(()=> {\n       if (shouldResolve) {\n      // Fulfill\n      resolve ( { position: position, delay: delay });\n    } else {\n      // Reject\n     reject ( { position: position, delay: delay });\n    }\n    },delay)\n  });\n \n};\nfunction onFormSubmit(event) {\nevent.preventDefault();\nconst { elements: { delay, step, amount },\n  } = event.target;\n\n  let delayOfNumber = Number(delay.value);\n\n  const stepOfNumber = Number(step.value);\n\nfor (let index = 1; index <= amount.value; index++) {\n  createPromise(index, delayOfNumber)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delayOfNumber = delayOfNumber + stepOfNumber;\n  };\n   event.target.reset()\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","delay1","step","amount","delayOfNumber","Number","value","stepOfNumber","index","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.3139f1c9.js.map"}